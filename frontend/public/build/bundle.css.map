{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Authentication.svelte",
    "Explore.svelte",
    "Industry.svelte",
    "History.svelte",
    "Industry.svelte",
    "Stock.svelte",
    "Navigation.svelte",
    "Balance.svelte",
    "Link.svelte",
    "User.svelte",
    "Notifications.svelte",
    "Notification.svelte",
    "Orders.svelte",
    "Portfolio.svelte",
    "Stock.svelte",
    "Watchlist.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import page from 'page';\r\n    import { activeIndustry, activeStock, activeStockData, user } from './stores';\r\n    import * as http from './http';\r\n    \r\n    import Navigation from './views/Navigation/Navigation.svelte';\r\n    import Authentication from './views/Authentication/Authentication.svelte';\r\n    import Orders from './views/Orders/Orders.svelte';\r\n    import History from './views/History/History.svelte';\r\n    import Portfolio from './views/Portfolio/Portfolio.svelte';\r\n    import Explore from './views/Explore/Explore.svelte';\r\n    import Watchlist from './views/Watchlist/Watchlist.svelte';\r\n    import Notifications from './views/Notifications/Notifications.svelte';\r\n\r\n    import Industry from './views/Industry/Industry.svelte';\r\n    import Stock from './views/Stock/Stock.svelte';\r\n\r\n    let activeComponent;\r\n\r\n    page('/', () => setRoute(Portfolio));\r\n    page('/authentication', () => setRoute(Authentication));\r\n    page('/orders', () => setRoute(Orders));\r\n    page('/history', () => setRoute(History));\r\n    page('/explore', () => setRoute(Explore));\r\n    page('/watchlist', () => setRoute(Watchlist));\r\n    page('/notifications', () => setRoute(Notifications));\r\n\r\n    page('/explore/:industry', (ctx, next) => {\r\n        activeIndustry.set(ctx.params.industry);\r\n        next();\r\n    }, () => setRoute(Industry));\r\n\r\n    page('/explore/:industry/:ticker', async (ctx, next) => {\r\n        activeIndustry.set(ctx.params.industry);\r\n        activeStock.set(ctx.params.ticker);\r\n        activeStockData.set(await http.getStock(ctx.params.ticker));\r\n        next();\r\n    }, () => setRoute(Stock));\r\n\r\n    page.start();\r\n\r\n    function setRoute(route) {\r\n        if (route == Authentication && $user) page('/');\r\n        else if (route != Authentication && !$user) page('/authentication');\r\n        else activeComponent = route;\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .main {\r\n        display: flex;\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    .activeComponent {\r\n        flex-grow: 100;\r\n        overflow-y: auto;\r\n    }\r\n</style>\r\n\r\n<div class='main'>\r\n    {#if activeComponent != Authentication}\r\n        <Navigation/>\r\n    {/if}\r\n    <div class='activeComponent'>\r\n        <svelte:component this={activeComponent}/>\r\n    </div>\r\n</div>",
    "<script>\r\n    import page from 'page';\r\n    import * as http from '../../http';\r\n    import { user, portfolioValue, stocks, industries } from '../../stores';\r\n\r\n    let view = 'Sign in';\r\n\r\n    async function signInForm(event) {\r\n        const signInResponse = await http.signIn(event.target.email.value, event.target.password.value);\r\n        if (signInResponse.accessToken) {\r\n            localStorage.setItem('accessToken', signInResponse.accessToken);\r\n            const authResponse = await http.accessTokenAuth(signInResponse.accessToken);\r\n            if (!authResponse.portfolio) authResponse.portfolio = {};\r\n            user.set(authResponse);\r\n            init();\r\n            page('/');\r\n        }\r\n    }\r\n\r\n    async function createAccountForm(event) {\r\n        if (event.target.password.value == event.target.confirmPassword.value) {\r\n            const createAccountResponse = await http.createAccount(event.target.email.value, event.target.password.value, event.target.firstName.value, event.target.lastName.value);\r\n            if (createAccountResponse.accessToken) {\r\n                localStorage.setItem('accessToken', createAccountResponse.accessToken);\r\n                const authResponse = await http.accessTokenAuth(createAccountResponse.accessToken);\r\n                if (!authResponse.portfolio) authResponse.portfolio = {};\r\n                user.set(authResponse);\r\n                init();\r\n                page('/');\r\n            }\r\n        } else {\r\n            console.log('Passwords do not match');\r\n        }\r\n    }\r\n\r\n    async function init() {\r\n        const stocksResponse = await http.getStocks();\r\n        stocks.set(stocksResponse);\r\n\r\n        let userValue;\r\n        let portfolioValueLocal = 0;\r\n        const unsubscribe = user.subscribe(value => userValue = value);\r\n\r\n        let industriesResponse = {};\r\n        for (let i = 0; i < stocksResponse.length; i++) {\r\n            industriesResponse[stocksResponse[i].industry] ? industriesResponse[stocksResponse[i].industry]++ : industriesResponse[stocksResponse[i].industry] = 1;\r\n            if (userValue.portfolio && userValue.portfolio[stocksResponse[i].ticker]) {\r\n                portfolioValueLocal += userValue.portfolio[stocksResponse[i].ticker].numShares * stocksResponse[i].currentPrice;\r\n            }\r\n        }\r\n        industries.set(industriesResponse);\r\n        portfolioValue.set(portfolioValueLocal);\r\n        unsubscribe();\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .form, .image {\r\n        display: flex;\r\n        flex-flow: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n    .image {\r\n        background: var(--purple); /* fallback */\r\n        background: linear-gradient(0deg,rgba(16,15,34,0.9),rgba(16,15,34,0.9)), url('https://images.unsplash.com/photo-1443110189928-4448af4a2bc5?ixlib=rb-1.2.1&auto=format&fit=crop&w=1800&q=80');\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n    .form > form {\r\n        width: 80%;\r\n        max-width: 500px;\r\n    }\r\n    form > div, form > input, form > button {\r\n        width: 100%;\r\n    }\r\n    form > input {\r\n        margin: 40px 0px 0px 0px;\r\n        padding: 0px 0px 0px 20px;\r\n        border: 1px solid var(--gray);\r\n        border-radius: 5px;\r\n        height: 50px;\r\n    }\r\n    form > input:placeholder {\r\n        color: var(--gray);\r\n    }\r\n    .form-header {\r\n        font-weight: 500;\r\n        font-size: 24px;\r\n    }\r\n\r\n    .header, .subheader {\r\n        color: var(--white);\r\n        font-size: 20px;\r\n        font-weight: 300;\r\n        margin-top: 5px;\r\n    }\r\n    .subheader {\r\n        font-weight: 500;\r\n    }\r\n    .submit {\r\n        background: var(--black);\r\n        color: var(--white);\r\n        height: 50px;\r\n        margin-top: 40px;\r\n        border: none;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n    }\r\n    .submit-light {\r\n        width: 200px;\r\n        background-color: var(--white);\r\n        color: var(--purple);\r\n    }\r\n    .authentication {\r\n        display: grid;\r\n        grid-template-columns: 2fr 1fr;\r\n        height: 100%;\r\n    }\r\n</style>\r\n\r\n<div class='authentication'>\r\n    <div class='form'>\r\n        {#if view == 'Sign in'}\r\n            <form class='sign-in' on:submit|preventDefault={signInForm}>\r\n                <div class='form-header'>Sign in to your account</div>\r\n                <input required type='email' id='email' placeholder='Email Address'/><br>\r\n                <input required type='password' id='password' placeholder='Password'/><br>\r\n                <button class='submit' type='submit'>Sign in</button>\r\n            </form>\r\n        {:else}\r\n            <form class='create-account' on:submit|preventDefault={createAccountForm}>\r\n                <div class='form-header'>Create an account</div>\r\n                <input required type='text' id='firstName' placeholder='First Name'/><br>\r\n                <input required type='text' id='lastName' placeholder='Last Name'/><br>\r\n                <input required type='email' id='email' placeholder='Email Address'/><br>\r\n                <input required type='password' id='password' placeholder='Password'/><br>\r\n                <input required type='password' id='confirmPassword' placeholder='Confirm Password'/><br>\r\n                <button class='submit' type='submit'>Create account</button>\r\n            </form>\r\n        {/if}\r\n    </div>\r\n    <div class='image'>\r\n        <div class='content'>\r\n            <div class='header'>{view == 'Sign in' ? 'Don\\'t have an account?' : 'Already have an account?'}</div>\r\n            <div class='subheader'>{view == 'Sign in' ? 'Create one.' : 'Sign in.'}</div>\r\n            <button class='submit submit-light' on:click={() => view = view == 'Sign in' ? 'Create account' : 'Sign in'}>{view == 'Sign in' ? 'Create account' : 'Sign in'}</button>\r\n        </div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import { industries } from '../../stores';\r\n    import { industryPhotos } from '../../../public/assets/industryPhotos';\r\n    import Industry from './components/Industry.svelte';\r\n</script>\r\n\r\n<style>\r\n    .search {\r\n        height: 50px;\r\n        width: calc(100% - 80px);\r\n        margin: 40px;\r\n        padding-left: 20px;\r\n        box-sizing: border-box;\r\n        background: transparent;\r\n        border: 1px solid var(--gray);\r\n        border-radius: 5px;\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n        color: var(--black);\r\n    }\r\n    .search::placeholder {\r\n        color: var(--dark-gray);\r\n    }\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 0px 40px 40px 40px;\r\n    }\r\n    .industry-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n        gap: 20px;\r\n        margin: 0px 40px 40px 40px;\r\n    }\r\n</style>\r\n\r\n<input type='text' class='search' placeholder='Search for an industry, stock ticker, or company name'>\r\n\r\n<div class='header'>Explore</div>\r\n\r\n<div class='industry-grid'>\r\n    {#each Object.keys($industries).sort() as industry}\r\n        <Industry industry={industry} numberOfStocks={$industries[industry]} photo={industryPhotos[industry.toLowerCase()]}/>\r\n    {/each}\r\n</div>",
    "<script>\r\n    import page from 'page';\r\n    import { activeIndustry } from '../../../stores';\r\n\r\n    export let industry;\r\n    export let numberOfStocks;\r\n    export let photo;\r\n\r\n    function setIndustry() {\r\n        activeIndustry.set(industry);\r\n        page(`/explore/${industry}`);\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .industry-card {\r\n        position: relative;\r\n        height: 150px;\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        cursor: pointer;\r\n        color: var(--white);\r\n    }\r\n    .industry-content {\r\n        position: absolute;\r\n        left: 0;\r\n        bottom: 0;\r\n        padding: 20px;\r\n    }\r\n    .industry-name {\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        margin-bottom: 5px;\r\n    }\r\n    .industry-stocks {\r\n        font-size: 15px;\r\n        font-weight: 400;\r\n    }\r\n</style>\r\n\r\n<div on:click={setIndustry} class='industry-card' \r\n    style='\r\n        background: linear-gradient(45deg, rgba(16,15,34,0.5) 0%, rgba(16,15,34,0) 100%), url({photo});\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    '>\r\n    <div class='industry-content'>\r\n        <div class='industry-name'>{industry}</div>\r\n        <div class='industry-stocks'>{numberOfStocks} Stocks</div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import { user } from '../../stores';\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        margin: 40px 40px 5px 40px;\r\n        color: var(--black);\r\n    }\r\n    .content {\r\n        margin: 40px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>History</div>\r\n\r\n<div class='content'>\r\n    {#each [...$user.history].reverse() as event}\r\n        {#if event.type == 'buy' || event.type == 'sell'}\r\n            <div>Day: {event.day}</div>\r\n            <div>{event.type.charAt(0).toUpperCase() + event.type.slice(1)} {event.shares} shares of {event.ticker} at ${event.price}/share</div>\r\n            <br>\r\n        {:else}\r\n            <div>Day: {event.day}</div>\r\n            <div>{event.type.charAt(0).toUpperCase() + event.type.slice(1)} ${event.amount}</div>\r\n            <br>\r\n        {/if}\r\n    {/each}\r\n</div>\r\n",
    "<script>\r\n    import { stocks, activeIndustry } from '../../stores';\r\n    import Stock from './components/Stock.svelte';\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 40px;\r\n    }\r\n    .stock-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n        gap: 20px;\r\n        margin: 40px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>{$activeIndustry}</div>\r\n\r\n<div class='stock-grid'>\r\n    {#each $stocks.filter(stock => stock.industry == $activeIndustry).sort((a, b) => (a.name > b.name) ? 1 : -1) as stock}\r\n        <Stock name={stock.name} ticker={stock.ticker} logo={stock.logo}></Stock>\r\n    {/each}\r\n</div>\r\n\r\n",
    "<script>\r\n    import page from 'page';\r\n    import { activeIndustry, activeStock } from '../../../stores';\r\n\r\n    export let name;\r\n    export let ticker;\r\n    export let logo = '';\r\n\r\n    function setStock() {\r\n        activeStock.set(ticker);\r\n        page(`/explore/${$activeIndustry ? $activeIndustry : 'n'}/${ticker}`);\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .stock {\r\n        display: flex;\r\n        cursor: pointer;\r\n        margin-bottom: 20px;\r\n        width: 100%;\r\n    }\r\n    .stock-logo {\r\n        width: 40px;\r\n        height: 40px;\r\n        font-weight: 500;\r\n        color: white;\r\n        border-radius: 5px;\r\n\r\n        /* center inner text */\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n    .stock-content {\r\n        position: relative;\r\n        margin-left: 10px;\r\n    }\r\n    .stock-ticker {\r\n        position: absolute;\r\n        bottom: 0;\r\n        color: var(--dark-gray);\r\n    }\r\n</style>\r\n\r\n<div class='stock' on:click={setStock}>\r\n    <div class='stock-logo' style={logo != '' ? `background-image: url(${logo})` : 'background: #C9C8D2'}>{logo ? '' : name[0].toUpperCase()}</div>\r\n    <div class='stock-content'>\r\n        <div class='stock-name'>{name}</div>\r\n        <div class='stock-ticker'>{ticker}</div>\r\n    </div>\r\n    <slot></slot>\r\n</div>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import { user, portfolioValue, date } from '../../stores';\r\n    import * as http from '../../http';\r\n\r\n    import User from './components/User.svelte';\r\n    import Balance from './components/Balance.svelte';\r\n    import Link from './components/Link.svelte';\r\n\r\n    async function deposit(event) {\r\n        let newUser = await http.deposit(event.target.depositAmount.value);\r\n        if (!newUser.portfolio) newUser.portfolio = {};\r\n        user.set(newUser);\r\n        event.target.depositAmount.value = '';\r\n    }\r\n\r\n    async function withdraw(event) {\r\n        if ($user.balance >= event.target.withdrawAmount.value) {\r\n            let newUser = await http.withdraw(event.target.withdrawAmount.value)\r\n            if (!newUser.portfolio) newUser.portfolio = {};\r\n            user.set(newUser);\r\n        } else {\r\n            console.log(`Cannot withdraw ${event.target.withdrawAmount.value}`);\r\n        }\r\n        event.target.withdrawAmount.value = '';\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .navigation {\r\n        width: 250px;\r\n        padding: 20px;\r\n        border-right: 1px solid var(--gray);\r\n    }\r\n    .line {\r\n        margin: 0px;\r\n        border-bottom: 1px solid var(--gray);\r\n    }\r\n    .margin-top {\r\n        margin-top: 20px;\r\n    }\r\n    .deposit {\r\n        margin-bottom: 20px;\r\n    }\r\n    .button, .input {\r\n        width: 100%;\r\n        margin-top: 20px;\r\n        background: var(--light-purple);\r\n        color: var(--purple);\r\n        height: 40px;\r\n        border: none;\r\n        border-radius: 5px;\r\n    }\r\n    .button {\r\n        cursor: pointer;\r\n    }\r\n    .input {\r\n        background: transparent;\r\n        border: 1px solid var(--gray);\r\n    }\r\n</style>\r\n\r\n<div class='navigation'>\r\n    <!-- user name and photo -->\r\n    <User firstName={$user.firstName} lastName={$user.lastName} imageUrl={''}/>\r\n    <div class='line'></div>\r\n    <!-- cash balance and portfolio value for current user -->\r\n    <Balance cashBalance={`$${$user.balance}`} portfolioValue={$portfolioValue != null ? `$${$portfolioValue}` : '...'}/>\r\n    <div class='line'></div>\r\n    <!-- list of navigation links -->\r\n    <Link icon={'box'} text={'Portfolio'} route={'/'}/>\r\n    <Link icon={'credit-card'} text={'Orders'} route={'/orders'}/>\r\n    <Link icon={'archive'} text={'History'} route={'/history'}/>\r\n    <Link icon={'grid'} text={'Explore'} route={'/explore'}/>\r\n    <Link icon={'bell'} text={'Notifications'} route={'/notifications'}/>\r\n    <Link icon={'bookmark'} text={'Watchlist'} route={'/watchlist'}/>\r\n    <div class='line margin-top'></div>\r\n    <form class='deposit' on:submit|preventDefault={deposit}>\r\n        <input class='input' type='number' min='0' id='depositAmount'>\r\n        <button class='button' type='submit'>Deposit</button>\r\n    </form>\r\n    <div class='line'></div>\r\n    <form class='withdraw' on:submit|preventDefault={withdraw}>\r\n        <input class='input' type='number' min='0' id='withdrawAmount'>\r\n        <button class='button' type='submit'>Withdraw</button>\r\n    </form>\r\n    {#if $user.admin}\r\n        <button on:click={() => http.forceEOD()}>Force EOD</button>\r\n    {/if}\r\n    {#if $date}\r\n        <div>{$date.date}</div>\r\n    {/if}\r\n</div>",
    "<script>\r\n    export let cashBalance;\r\n    export let portfolioValue;\r\n</script>\r\n\r\n<style>\r\n    .balance {\r\n        margin: 20px 0px;\r\n    }\r\n    .descriptor {\r\n        color: var(--dark-gray);\r\n    }\r\n    .descriptor:not(:first-of-type) {\r\n        margin-top: 20px;\r\n    }\r\n    .cash, .portfolio {\r\n        margin-top: 5px;\r\n    }\r\n</style>\r\n\r\n<div class='balance'>\r\n    <div class='descriptor'>Cash Balance</div>\r\n    <div class='cash'>{cashBalance}</div>\r\n    <div class='descriptor'>Portfolio Value</div>\r\n    <div class='portfolio'>{portfolioValue}</div>\r\n</div>",
    "<script>\r\n    import page from 'page';\r\n\r\n    export let icon;\r\n    export let text;\r\n    export let route;\r\n</script>\r\n\r\n<style>\r\n    .link {\r\n        display: flex;\r\n        cursor: pointer;\r\n        align-items: center;\r\n    }\r\n    .link:not(:first-of-type) {\r\n        margin-top: 20px;\r\n    }\r\n    .icon {\r\n        margin-right: 10px;\r\n    }\r\n</style>\r\n\r\n<div class='link' on:click={() => page(route)}>\r\n    <img class='icon' src='/assets/icons/{icon}.svg' alt={icon}/>\r\n    <span class='text'>{text}</span>\r\n</div>",
    "<script>\r\n    import page from 'page';\r\n    import { user } from '../../../stores'; \r\n\r\n    export let firstName;\r\n    export let lastName;\r\n    export let imageUrl;\r\n\r\n    function signOut() {\r\n        localStorage.clear('accessToken');\r\n        user.set(null);\r\n        page('/authentication');\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .user {\r\n        display: flex;\r\n        margin-bottom: 20px;\r\n    }\r\n    .image {\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 5px;\r\n        font-weight: 500;\r\n        color: white;\r\n\r\n        /* center inner text */\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        background: var(--purple);\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n    .content {\r\n        position: relative;\r\n        margin-left: 10px;\r\n    }\r\n    .link {\r\n        position: absolute;\r\n        bottom: 0;\r\n        color: var(--purple);\r\n        cursor: pointer;\r\n    }\r\n</style>\r\n\r\n<div class='user'>\r\n    {#if firstName && lastName}\r\n        <div class='image' style='background-image: url({imageUrl})'>{imageUrl ? '' : `${firstName[0].toUpperCase()}${lastName[0].toUpperCase()}`}</div>\r\n    {/if}\r\n    <div class='content'>\r\n        <div class='name'>{firstName} {lastName}</div><br>\r\n        <div class='link' on:click={signOut}>Sign out</div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import Notification from './components/Notification.svelte';\r\n    import { user } from '../../stores';\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 40px;\r\n    }\r\n    .notification-grid {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: 20px;\r\n        margin: 40px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>Notifications</div>\r\n\r\n<div class='notification-grid'>\r\n    {#each $user.subscriptions as notification}\r\n        <Notification id={notification.id} ticker={notification.ticker} condition={`${notification.difference}%`} enabled={notification.active}></Notification>\r\n    {/each}\r\n</div>\r\n\r\n",
    "<script>\r\n    import * as http from '../../../http';\r\n    import { user } from '../../../stores';\r\n\r\n    export let id;\r\n    export let ticker;\r\n    export let enabled;\r\n    export let condition;\r\n\r\n    async function toggle() {\r\n        enabled ? await http.disableNotification(id) : await http.enableNotification(id);\r\n        refreshUser();\r\n    }\r\n\r\n    async function del() {\r\n        await http.deleteNotification(id);\r\n        refreshUser();\r\n    }\r\n\r\n    async function refreshUser() {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        const authResponse = await http.accessTokenAuth(accessToken);\r\n\t\tif (!authResponse.portfolio) authResponse.portfolio = {};\r\n\t\tuser.set(authResponse);\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .notification {\r\n        display: flex;\r\n        cursor: pointer;\r\n        margin-bottom: 20px;\r\n        border: 1px solid var(--gray);\r\n        border-radius: 5px;\r\n        padding: 10px;\r\n    }\r\n    .notification-name {\r\n        flex-grow: 1;\r\n    }\r\n    .enabled {\r\n        color: var(--black);\r\n    }\r\n    .disabled {\r\n        color: var(--gray);\r\n    }\r\n</style>\r\n\r\n<div class='notification'>\r\n    <div class='notification-name {enabled ? 'enabled' : 'disabled'}'>{ticker} ({condition})</div>\r\n    <button on:click={toggle}>{enabled ? 'Disable' : 'Enable'}</button>\r\n    <button on:click={del}>Delete</button>\r\n</div>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import * as http from '../../http';\r\n    import { orders } from '../../stores';\r\n\r\n    onMount(async () => orders.set(await http.orders()));\r\n\r\n    async function cancelOrder(_id) {\r\n        await http.cancelOrder(_id);\r\n        orders.set(await http.orders());\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 40px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>Orders</div>\r\n\r\n{#each $orders as order}\r\n    <div>_id: {order._id}</div>\r\n    <div>Type: {order.type}</div>\r\n    <div>Ticker: {order.ticker}</div>\r\n    <div>Price: {order.price}</div>\r\n    <div>Quantity: {order.quantity}</div>\r\n    <div>Expire: {order.expire}</div>\r\n    <div>Expiry Date: {order.expiryDate}</div>\r\n\r\n    <button on:click={() => cancelOrder(order._id)}>Cancel</button>\r\n\r\n    <br><br>\r\n{/each}\r\n",
    "<script>\r\n    import { user, stocks } from '../../stores';\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 40px;\r\n    }\r\n    .portfolio-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n        gap: 20px;\r\n        margin: 40px;\r\n    }\r\n    .stock {\r\n        display: flex;\r\n        cursor: pointer;\r\n        margin-bottom: 20px;\r\n        width: 100%;\r\n    }\r\n    .stock-logo {\r\n        width: 40px;\r\n        height: 40px;\r\n        font-weight: 500;\r\n        color: white;\r\n        border-radius: 5px;\r\n\r\n        /* center inner text */\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n    }\r\n    .stock-content {\r\n        position: relative;\r\n        margin-left: 10px;\r\n        width: 100%;\r\n    }\r\n    .stock-ticker {\r\n        position: absolute;\r\n        bottom: 0;\r\n        color: var(--dark-gray);\r\n    }\r\n</style>\r\n\r\n<div class='header'>Portfolio</div>\r\n\r\n<div class='portfolio-grid'>\r\n    {#each $stocks as stock}\r\n        {#if $user.portfolio[stock.ticker]}\r\n            <div class='stock'>\r\n                <div class='stock-logo' style={stock.logo != '' ? `background-image: url(${stock.logo})` : 'background: #C9C8D2'}>{stock.logo ? '' : stock.name[0].toUpperCase()}</div>\r\n                <div class='stock-content'>\r\n                    <div class='stock-name'>{stock.name}</div><br>\r\n                    <div class='stock-ticker'>{$user.portfolio[stock.ticker].numShares} Shares @ ${stock.currentPrice}/each, Avg Price: {($user.portfolio[stock.ticker].avgPrice).toFixed(2)}</div>\r\n                </div>\r\n            </div>\r\n        {/if}   \r\n    {/each}\r\n</div>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import { activeStock, activeStockData, activeStockHistory, user, allOrders } from '../../stores';\r\n    import * as http from '../../http';\r\n\r\n    onMount(async () => {\r\n        allOrders.set(await http.allOrders());\r\n        activeStockHistory.set(await http.getStockHistory($activeStock));\r\n        console.log($activeStockHistory);\r\n    });\r\n\r\n    async function buy(event) {\r\n        await http.buyOrder($activeStock, event.target.price.value, event.target.quantity.value, event.target.expire.checked);\r\n        allOrders.set(await http.allOrders());\r\n    }\r\n\r\n    async function sell(event) {\r\n        await http.sellOrder($activeStock, event.target.price.value, event.target.quantity.value, event.target.expire.checked);\r\n        allOrders.set(await http.allOrders());\r\n    }\r\n\r\n    async function addToWatchlist() {\r\n        console.log($activeStock);\r\n        await http.addToWatchlist($activeStock);\r\n        refreshUser();\r\n    }\r\n\r\n    async function removeFromWatchlist() {\r\n        await http.removeFromWatchlist($activeStock);\r\n        refreshUser();\r\n    }\r\n\r\n    async function notification(event) {\r\n        await http.addNotification($activeStock, event.target.difference.value);\r\n        refreshUser();\r\n    }\r\n\r\n    async function refreshUser() {\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        const authResponse = await http.accessTokenAuth(accessToken);\r\n\t\tif (!authResponse.portfolio) authResponse.portfolio = {};\r\n\t\tuser.set(authResponse);\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        margin: 40px 40px 5px 40px;\r\n        color: var(--black);\r\n    }\r\n    .url {\r\n        margin: 0px 40px 40px 40px;\r\n        color: inherit;\r\n        color: var(--dark-gray);\r\n        text-decoration: none;\r\n    }\r\n    .content {\r\n        margin: 40px;\r\n    }\r\n    .sell, .buy {\r\n        margin-top: 40px;\r\n    }\r\n    .form-header {\r\n        font-size: 18px;\r\n        font-weight: 500;\r\n        margin-bottom: 20px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>{$activeStockData.name}</div>\r\n<a class='url' href={$activeStockData.weburl}>{$activeStockData.weburl}</a>\r\n\r\n<div class='content'>\r\n    {#if !$user.watchlist.includes($activeStock)}\r\n        <button on:click={addToWatchlist}>Add to watchlist</button>\r\n    {:else}\r\n        <button on:click={removeFromWatchlist}>Remove from watchlist</button>\r\n    {/if}\r\n    <br><br>\r\n\r\n    {#if $activeStockData}\r\n        <div>Current Price: ${$activeStockData.currentPrice}</div>\r\n    {/if}\r\n    {#if $user.portfolio[$activeStock]}\r\n        <div>You own {$user.portfolio[$activeStock].numShares} shares</div>\r\n    {/if}\r\n    <br>\r\n    {#if $activeStockHistory[0]}\r\n        <div>Daily Low: {$activeStockHistory[0].low}</div>\r\n        <div>Daily High: {$activeStockHistory[0].high}</div>\r\n        <div>Opening Price: {$activeStockHistory[0].openingPrice}</div>\r\n        <div>Closing Price: {$activeStockHistory[0].closingPrice}</div>\r\n        <div>Trade Volume: {$activeStockHistory[0].tradeVolume}</div>\r\n    {/if}\r\n\r\n    <form class='sell' on:submit|preventDefault={notification}>\r\n        <div class='form-header'>Set a Notification</div>\r\n        <input type='number' min='0' id='difference' placeholder='Daily Percent Change'>\r\n        <button class='submit' type='submit'>Add</button> \r\n    </form>\r\n\r\n    <form class='buy' on:submit|preventDefault={buy}>\r\n        <div class='form-header'>Place a Buy Order</div>\r\n        <input type='number' min='0' id='price' placeholder='Price'>\r\n        <input type='number' min='0' id='quantity' placeholder='Number of Shares'>\r\n        <label for='expire'>Expire</label>\r\n        <input type='checkbox' id='expire'>\r\n        <button class='submit' type='submit'>Buy</button>\r\n    </form>\r\n\r\n    {#if $user.portfolio[$activeStock] && $user.portfolio[$activeStock].numShares > 0}\r\n        <form class='sell' on:submit|preventDefault={sell}>\r\n            <div class='form-header'>Place a Sell Order</div>\r\n            <input type='number' min='0' id='price' placeholder='Price'>\r\n            <input type='number' min='0' id='quantity' placeholder='Number of Shares'>\r\n            <label for='expire'>Expire</label>\r\n            <input type='checkbox' id='expire'>\r\n            <button class='submit' type='submit'>Sell</button> \r\n        </form>\r\n    {/if}\r\n\r\n    <br><br>\r\n\r\n    {#each $allOrders as order}\r\n        {#if order.ticker == $activeStock}\r\n            <div>Type: {order.type}</div>\r\n            <div>Ticker: {order.ticker}</div>\r\n            <div>Price: {order.price}</div>\r\n            <div>Quantity: {order.quantity}</div>\r\n            <div>Expire: {order.expire}</div>\r\n            <br>\r\n        {/if}\r\n    {/each}\r\n\r\n    <div class='form-header'>Historical Data</div>\r\n\r\n    {#if $activeStockHistory}\r\n        {#each $activeStockHistory as day, i}\r\n            {#if i != 0}\r\n                <div>Day: {day.day}</div>\r\n                <div>Daily Low: {day.low}</div>\r\n                <div>Daily High: {day.high}</div>\r\n                <div>Opening Price: {day.openingPrice}</div>\r\n                <div>Closing Price: {day.closingPrice}</div>\r\n                <div>Trade Volume: {day.tradeVolume}</div>\r\n                <br>\r\n            {/if}\r\n        {/each}\r\n    {/if}\r\n</div>\r\n",
    "<script>\r\n    import Stock from '../Industry/components/Stock.svelte';\r\n    import { stocks, user } from '../../stores';\r\n</script>\r\n\r\n<style>\r\n    .header {\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n        color: var(--black);\r\n        margin: 40px;\r\n    }\r\n    .stock-grid {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\r\n        gap: 20px;\r\n        margin: 40px;\r\n    }\r\n</style>\r\n\r\n<div class='header'>Watchlist</div>\r\n\r\n<div class='stock-grid'>\r\n    {#each $stocks as stock}\r\n        {#if $user.watchlist.includes(stock.ticker)}\r\n            <Stock name={stock.name} ticker={stock.ticker} logo={stock.logo}></Stock>  \r\n        {/if}\r\n    {/each}\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "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"
}